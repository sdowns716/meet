{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sydneydowns/meet/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport \"./nprogress.css\";\nimport EventGenre from './EventGenre';\nimport { OfflineAlert } from \"./Alert\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [],\n      locations: [],\n      NumberOfEvents: 32,\n      currentLocation: \"all\",\n      alertText: \"\"\n    };\n\n    this.updateEvents = (location, eventCount) => {\n      const {\n        currentLocation,\n        numberOfEvents\n      } = this.state;\n\n      if (location) {\n        getEvents().then(events => {\n          const locationEvents = location === \"all\" ? events : events.filter(event => event.location === location);\n          const filteredEvents = locationEvents.slice(0, numberOfEvents);\n          this.setState({\n            events: filteredEvents,\n            currentLocation: location\n          });\n        });\n      } else {\n        getEvents().then(events => {\n          const locationEvents = currentLocation === \"all\" ? events : events.filter(event => event.location === currentLocation);\n          const filteredEvents = locationEvents.slice(0, eventCount);\n          this.setState({\n            events: filteredEvents,\n            numberOfEvents: eventCount\n          });\n        });\n      }\n    };\n\n    this.getData = () => {\n      const {\n        locations,\n        events\n      } = this.state;\n      const data = locations.map(location => {\n        const number = events.filter(event => event.location === location).length;\n        const city = location.split(' ').shift();\n        return {\n          city,\n          number\n        };\n      });\n      return data;\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    if (!navigator.onLine) {\n      this.setState({\n        OfflineAlert: 'You are offline.'\n      });\n    }\n\n    getEvents().then(events => {\n      if (this.mounted) {\n        this.setState({\n          events: events,\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const {\n      events\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meet-Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OfflineAlert, {\n        text: this.state.alertText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        locations: this.state.locations,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        numberOfEvents: this.state.numberOfEvents,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-vis-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EventGenre, {\n          locations: this.state.locations,\n          events: this.state.events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Events in each city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            margin: {\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              type: \"category\",\n              dataKey: \"city\",\n              name: \"city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dataKey: \"number\",\n              name: \"number of events\",\n              allowDecimals: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                strokeDasharray: \"3 3\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: this.getData(),\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sydneydowns/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","EventGenre","OfflineAlert","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","App","state","events","locations","currentLocation","alertText","updateEvents","location","eventCount","numberOfEvents","then","locationEvents","filter","event","filteredEvents","slice","setState","getData","data","map","number","length","city","split","shift","componentDidMount","mounted","navigator","onLine","componentWillUnmount","render","top","right","bottom","left","strokeDasharray"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport \"./nprogress.css\";\nimport EventGenre from './EventGenre';\nimport { OfflineAlert } from \"./Alert\";\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    NumberOfEvents: 32, \n    currentLocation: \"all\",\n    alertText: \"\",\n  };\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((events) => {\n        const locationEvents =\n          location === \"all\"\n            ? events\n            : events.filter((event) => event.location === location);\n        const filteredEvents = locationEvents.slice(0, numberOfEvents);\n        this.setState({\n          events: filteredEvents,\n          currentLocation: location,\n        });\n      });\n    } else {\n      getEvents().then((events) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? events\n            : events.filter((event) => event.location === currentLocation);\n        const filteredEvents = locationEvents.slice(0, eventCount);\n        this.setState({\n          events: filteredEvents,\n          numberOfEvents: eventCount,\n        });\n      });\n    }\n  };\n\n  getData = () => {\n    const {locations, events} = this.state;\n    const data = locations.map((location)=>{\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(' ').shift()\n      return {city, number};\n    })\n    return data;\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (!navigator.onLine){\n      this.setState({\n        OfflineAlert: 'You are offline.'\n      });\n    }\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events, locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const { events } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Meet-Us</h1>\n        <OfflineAlert text={this.state.alertText} />\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <div className=\"data-vis-wrapper\">\n          <EventGenre\n            locations={this.state.locations}\n            events={this.state.events}\n          />\n          <h4>Events in each city</h4>\n          <ResponsiveContainer height={400}>\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis\n                type=\"number\"\n                dataKey=\"number\"\n                name=\"number of events\"\n                allowDecimals={false}\n              />\n              <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}