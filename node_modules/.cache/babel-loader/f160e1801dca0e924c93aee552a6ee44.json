{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sydneydowns/meet/src/EventGenre.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst EventGenre = ({\n  events\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setData(() => getData());\n  }, [events]);\n\n  const getData = () => {\n    const genres = [\"React\", \"JavaScript\", \"Node\", \"jQuery\", \"AngularJS\"];\n    const data = genres.map(genre => {\n      const value = events.filter(({\n        summary\n      }) => summary.split(\" \").includes(genre)).length;\n      return {\n        name: genre,\n        value\n      };\n    });\n    return data;\n  };\n\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#85D2DB\"];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: 200,\n        cy: 200,\n        labelLine: false,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        label: ({\n          name,\n          percent\n        }) => `${name} ${(percent * 100).toFixed(0)}%`,\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length],\n          name: entry.name\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventGenre, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = EventGenre;\nexport default EventGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventGenre\");","map":{"version":3,"sources":["/Users/sydneydowns/meet/src/EventGenre.js"],"names":["React","useEffect","useState","PieChart","Pie","Cell","ResponsiveContainer","EventGenre","events","data","setData","getData","genres","map","genre","value","filter","summary","split","includes","length","name","COLORS","percent","toFixed","entry","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,mBAA9B,QAAyD,UAAzD;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAAC,MAAMC,OAAO,EAAd,CAAP;AACD,GAFQ,EAEN,CAACH,MAAD,CAFM,CAAT;;AAIA,QAAMG,OAAO,GAAG,MAAM;AACpB,UAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,WAA1C,CAAf;AACA,UAAMH,IAAI,GAAGG,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;AACjC,YAAMC,KAAK,GAAGP,MAAM,CAACQ,MAAP,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAC1BA,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmBC,QAAnB,CAA4BL,KAA5B,CADY,EAEZM,MAFF;AAGA,aAAO;AAAEC,QAAAA,IAAI,EAAEP,KAAR;AAAeC,QAAAA;AAAf,OAAP;AACD,KALY,CAAb;AAMA,WAAON,IAAP;AACD,GATD;;AAWA,QAAMa,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAf;AAEA,sBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE,GAA7B;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAEb,IADR;AAEE,QAAA,EAAE,EAAE,GAFN;AAGE,QAAA,EAAE,EAAE,GAHN;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,WAAW,EAAE,EALf;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,OAAO,EAAC,OAPV;AAQE,QAAA,KAAK,EAAE,CAAC;AAAEY,UAAAA,IAAF;AAAQE,UAAAA;AAAR,SAAD,KACJ,GAAEF,IAAK,IAAG,CAACE,OAAO,GAAG,GAAX,EAAgBC,OAAhB,CAAwB,CAAxB,CAA2B,GAT1C;AAAA,kBAYGf,IAAI,CAACI,GAAL,CAAS,CAACY,KAAD,EAAQC,KAAR,kBACR,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEJ,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACF,MAAhB,CAFd;AAGE,UAAA,IAAI,EAAEK,KAAK,CAACJ;AAHd,WACQ,QAAOK,KAAM,EADrB;AAAA;AAAA;AAAA;AAAA,gBADD;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9CD;;GAAMnB,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst EventGenre = ({ events }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(() => getData());\n  }, [events]);\n\n  const getData = () => {\n    const genres = [\"React\", \"JavaScript\", \"Node\", \"jQuery\", \"AngularJS\"];\n    const data = genres.map((genre) => {\n      const value = events.filter(({ summary }) =>\n        summary.split(\" \").includes(genre)\n      ).length;\n      return { name: genre, value };\n    });\n    return data;\n  };\n\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#85D2DB\"];\n\n  return (\n    <ResponsiveContainer height={400}>\n      <PieChart width={400} height={400}>\n        <Pie\n          data={data}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) =>\n            `${name} ${(percent * 100).toFixed(0)}%`\n          }\n        >\n          {data.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={COLORS[index % COLORS.length]}\n              name={entry.name}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default EventGenre;"]},"metadata":{},"sourceType":"module"}